# Isothermal viscosity template using Green-Kubo formalism.

###############################################################################

# Starting parameters
units      metal
atom_style atomic
dimension  3
boundary   p p p

###############################################################################

# Simulation space
lattice      fcc 4.04092655671750

region       simbox prism 0 18 0 18 0 18 0 0 0
create_box   2 simbox
create_atoms 1 box

# Set the types of atoms
set atom 1*11664 type 1
set atom 11665*23328 type 2

# Remove extra atoms
#group remove id 51201:55296
#delete_atoms group remove

# Data
pair_style eam/alloy
pair_coeff * * ../potentials/ZrCu.lammps.eam Zr Cu

###############################################################################

# Time variables
variable mytimestep                equal  0.001

# Random seed
variable seed                      equal  989835154

# Run variables
variable corlength                 equal  1000
variable sampleinterval            equal  10

variable eqtemp                    equal  2000
variable eqhold                    equal  10000000

variable i                         loop   19
variable dt                        equal  100
variable stephold                  equal  100000

# Computed values by LAMMPS
compute  temp      all temp                 # Overall temperature
compute  pressure  all pressure thermo_temp # Overall pressure
compute  pe        all pe                   # Potenntial energy
compute  ke        all ke                   # Kinetic energy

variable vol       equal vol                # Simulation Volume
variable enthalpy  equal enthalpy           # Simulation enthalpy

# Pressure tensor components
variable pxx equal pxx
variable pyy equal pyy
variable pzz equal pzz
variable pxy equal pxy
variable pxz equal pxz
variable pyz equal pyz

# Data output
variable mydumprate                equal  1000
variable data_file_characteristics string system.txt
variable data_file_dump_rate       string traj.lammpstrj

################################################################################

# Time step
timestep ${mytimestep}

################################################################################

shell         mkdir step_0
shell         cp visc_template.in step_0/visc.in

# Save atom positions at an interval
dump          my_dump all custom ${mydumprate} step_0/traj.lammpstrj &
              id type xu yu zu vz vy vz

dump_modify my_dump sort id

# Save thermodynamic data
fix           thermo_save all ave/time 1 1 ${mydumprate} &
              c_temp c_pressure v_vol c_pe c_ke v_enthalpy &
              v_pxx v_pyy v_pzz v_pxy v_pxz v_pyz &
              file step_0/system.txt

# Save the temperature set
print         "${eqtemp}" file step_0/temperature.txt

# Randomize initial velocities
velocity      all create ${eqtemp} ${seed}

# Define an NPT equilibrium hold
fix           eq all npt temp ${eqtemp} ${eqtemp} 0.1 iso 0 0 1
run           ${eqhold}
unfix         eq

undump        my_dump
unfix         thermo_save

write_data    step_0/data.txt
write_restart step_0/restart.txt

# Loop through steps of isothermal holds NPT
label         start_loop

variable      dir_name  string "step_${i}"
shell         mkdir ${dir_name}

variable      copy_name string "${dir_name}/visc.in"
shell         cp visc_template.in ${copy_name}

# Save atom positions at an interval
variable      dump_name string "${dir_name}/traj.lammpstrj"
dump          my_dump all custom ${mydumprate} ${dump_name} &
              id type xu yu zu vz vy vz

dump_modify my_dump sort id

# Save thermodynamic data
variable      thermo_name string "${dir_name}/system.txt"
fix           thermo_save all ave/time 1 1 ${mydumprate} &
              c_temp c_pressure v_vol c_pe c_ke v_enthalpy &
              v_pxx v_pyy v_pzz v_pxy v_pxz v_pyz &
              file ${thermo_name}

# Begin the temperature hold
variable      t equal ${eqtemp}-${i}*${dt}

# Save the temperature set
variable      temp_name string "${dir_name}/temperature.txt"
print         "${t}" file ${temp_name}

fix           step all npt temp ${t} ${t} 0.1 iso 0 0 1
run           ${stephold}
unfix         step

variable      data_name string "${dir_name}/data.txt"
variable      restart_name string "${dir_name}/restart.txt"

write_data    ${data_name}
write_restart ${restart_name}

undump        my_dump
unfix         thermo_save

next          i
jump          cool.in start_loop
